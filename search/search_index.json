{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Tunarr","text":"<p>Create live TV channels from media on your Plex servers, and more!</p> <p>Configure your channels, programs, commercials, and settings using the Tunarr web UI.</p> <p>Access your channels by adding the spoofed Tunarr HDHomerun tuner to Plex, Jellyfin, or Emby. Or utilize generated M3U files with any 3rd party IPTV player app.</p>"},{"location":"#what-is-this","title":"What is this?","text":"<p>Tunarr is a fork / rewrite / rebrand of dizqueTV (which in itself was a fork of other projects!). This project was born out of both a love for TV and an appreciation for the work put into dizqueTV and its predecessors.</p> <p>Tunarr has the following goals:</p> <ul> <li>Modernize the stack, both backend and frontend</li> <li>Provide an migration path for existing users</li> <li>Stabilize the program, fix bugs, and improve performance (Tunarr currently is developed and tested on Node 20.11.1, which offers non-trivial performance improvements over previous versions)</li> <li>Modernize and \"prettify\" the Web UI</li> <li>And of course, Add a ton great new features!</li> </ul>"},{"location":"configure/channels/","title":"Channels","text":""},{"location":"getting-started/installation/","title":"Installation","text":"<p>Tunarr is available in two flavors: Docker image and standalone binaries.</p>"},{"location":"getting-started/installation/#docker","title":"Docker","text":"<p>Tunarr is available on Docker Hub as well as GHCR. Docker images come pre-packaged with <code>ffmpeg</code> 7.0 (thanks @jasongdove from ErsatzTV!).</p> <p>The general format of tags is: <code>{release}{-encoder}?</code>.</p> <p>Since Tunarr is currently pre-release, there is a single tag: <code>edge</code>. The edge tag is pushed hourly from the <code>main</code> branch. We also support a specialized image builds which include support for hardware-accelerated encoding with Nvidia, QSV, and VAAPI.</p> <p>Info</p> <p>Tunarr has experimental support for QSV / VAAPI. This issue is tracked here: chrisbenincasa/tunarr#23</p> <p>Docker:</p> <ul> <li><code>chrisbenincasa/tunarr:edge</code></li> <li><code>chrisbenincasa/tunarr:edge-nvidia</code></li> <li><code>chrisbenincasa/tunarr:edge-vaapi</code></li> </ul> <p>GHCR:</p> <ul> <li><code>ghcr.io/chrisbenincasa/tunarr:edge</code></li> <li><code>ghcr.io/chrisbenincasa/tunarr:edge-nvidia</code></li> <li><code>ghcr.io/chrisbenincasa/tunarr:edge-vaapi</code></li> </ul>"},{"location":"getting-started/installation/#binaries","title":"Binaries","text":"<p>Tunarr is released in pre-built binaries for Windows (x64), macOS (x64), and Linux (x64).</p> <p>Like Docker images, we currently have a single release, <code>edge</code> that updates hourly.</p> <p>Prebuilt binaries can be found at https://github.com/chrisbenincasa/tunarr/releases/tag/edge</p>"},{"location":"getting-started/setup/","title":"Setup","text":""},{"location":"getting-started/setup/#migrating-from-dizquetv","title":"Migrating from dizqueTV","text":"<p>Tip</p> <p>We highly recommend that you use a copy of your <code>.dizquetv</code> database directory when starting out with Tunarr. While Tunarr does not alter or overwrite the <code>.dizquetv</code> database directory, it is still considered pre-release software and should be treated as such!</p> <p>Upon first launch, Tunarr will look for a <code>.dizquetv</code> folder relative to its working directory and attempt a migration. Tunarr will try and migrate all legacy dizqueTV settings, including channels, programs, Plex servers, etc.</p> <p>When using Docker, you can mount your a directory named <code>.dizquetv</code> when launching Tunarr to initiate the migration.</p> <pre><code>docker run \\\n    -v \"$(pwd)\"/.dizquetv:/.dizquetv \\\n    -p 8000:8000 \\\n    chrisbenincasa/tunarr:edge\n</code></pre> <p>Or if using <code>docker compose</code>...</p> docker-compose.yml<pre><code>version: '3.8'\nservices:\n  tunarr:\n    image: chrisbenincasa/tunarr:edge\n    # Uncomment along with runtime below to enable HW accel\n    # image: chrisbenincasa/tunarr:edge-nvidia\n    container_name: tunarr\n    ports:\n      - ${TUNARR_SERVER_PORT:-8000}:8000\n    # Uncomment if using the Nvidia container\n    # runtime: nvidia\n    environment:\n      - LOG_LEVEL=${TUNARR_LOG_LEVEL:-INFO}\n    # volumes:\n    # The host path is relative to the location of the compose file\n    # This can also use an absolute path.\n    #\n    # Uncomment if migrating from dizquetv. Chnage the host path\n    # to the location of your dizquetv \"database\"\n    # - ./.dizquetv:/.dizquetv\n</code></pre> <p>Note</p> <p>You can force a legacy migration on subsequent launches of Tunarr using the <code>--force_migration</code> flag. But be careful! This can be destructive if you've done any additional configuration in Tunarr.</p>"},{"location":"getting-started/setup/#configuring-plex-server-sources","title":"Configuring Plex server sources","text":""},{"location":"getting-started/setup/#configuring-ffmpeg","title":"Configuring FFMPEG","text":""}]}